name: Products CI

on:
  push:
    branches: [ main ]
    paths:
      - 'contexts/products/**'
      - 'contexts/shared/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'contexts/products/**'
      - 'contexts/shared/**'

jobs:
  build-and-test-products:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Restore dependencies
      run: dotnet restore contexts/products/src/Ecomm.Products.WebApi/Ecomm.Products.WebApi.csproj
      
    - name: Build Products API
      run: dotnet build contexts/products/src/Ecomm.Products.WebApi/Ecomm.Products.WebApi.csproj --no-restore --configuration Release
      
    - name: Run Products Tests
      run: dotnet test contexts/products/tests/Ecomm.Products.WebApi.UnitTests/Ecomm.Products.WebApi.UnitTests.csproj --configuration Release --verbosity normal --collect:"XPlat Code Coverage"
      
    - name: Upload Products coverage reports
      uses: codecov/codecov-action@v4
      if: success()
      with:
        files: '**/coverage.cobertura.xml'
        flags: products
        fail_ci_if_error: false
        verbose: true

  docker-build-products:
    runs-on: ubuntu-latest
    needs: build-and-test-products
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/ecomm-products-api
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Products API Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: contexts/products/src/Ecomm.Products.WebApi/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          BUILD_CONFIGURATION=Release
        cache-from: type=gha
        cache-to: type=gha,mode=max
