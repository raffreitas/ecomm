services:
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
  ##########################
  # Catalog
  ##########################
  ecomm.catalog.api:
    image: ${DOCKER_REGISTRY-}ecommcatalogapi
    build:
      context: .
      dockerfile: src/Catalog/Ecomm.Catalog.Api/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      ecomm.catalog.database:
        condition: service_healthy

  ecomm.catalog.database:
    image: bitnami/postgresql
    container_name: catalog.database
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRESQL_DATABASE: catalog
      POSTGRESQL_PASSWORD: postgres
      POSTGRESQL_USERNAME: postgres
      POSTGRESQL_TIMEZONE: America/Sao_Paulo
    healthcheck:
      test: pg_isready -U postgres -d catalog
      interval: 10s
      timeout: 3s
      retries: 3
  ##########################
  # Customers
  ##########################
  ecomm.customers.api:
    image: ${DOCKER_REGISTRY-}ecommcustomersapi
    build:
      context: .
      dockerfile: src/Customers/Ecomm.Customers.Api/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      ecomm.customers.database:
        condition: service_healthy

  ecomm.customers.database:
    image: bitnami/postgresql
    container_name: customers.database
    restart: always
    ports:
      - 5435:5432
    environment:
      POSTGRESQL_DATABASE: customers
      POSTGRESQL_PASSWORD: postgres
      POSTGRESQL_USERNAME: postgres
      POSTGRESQL_TIMEZONE: America/Sao_Paulo
    healthcheck:
      test: pg_isready -U postgres -d customers
      interval: 10s
      timeout: 3s
      retries: 3
  ##########################
  # Orders
  ##########################
  ecomm.orders.api:
    image: ${DOCKER_REGISTRY-}ecommordersapi
    build:
      context: .
      dockerfile: src/Orders/Ecomm.Orders.Api/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      ecomm.orders.database:
        condition: service_healthy

  ecomm.orders.database:
    image: bitnami/postgresql
    container_name: orders.database
    restart: always
    ports:
      - 5433:5432
    environment:
      POSTGRESQL_DATABASE: orders
      POSTGRESQL_PASSWORD: postgres
      POSTGRESQL_USERNAME: postgres
      POSTGRESQL_TIMEZONE: America/Sao_Paulo
    healthcheck:
      test: pg_isready -U postgres -d orders
      interval: 10s
      timeout: 3s
      retries: 3
  ##########################
  # Payments
  ##########################
  ecomm.payments.api:
    image: ${DOCKER_REGISTRY-}ecommpaymentsapi
    build:
      context: .
      dockerfile: src/Payments/Ecomm.Payments.Api/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      ecomm.payments.database:
        condition: service_healthy

  ecomm.payments.database:
    image: bitnami/postgresql
    container_name: payments.database
    restart: always
    ports:
      - 5434:5432
    environment:
      POSTGRESQL_DATABASE: payments
      POSTGRESQL_PASSWORD: postgres
      POSTGRESQL_USERNAME: postgres
      POSTGRESQL_TIMEZONE: America/Sao_Paulo
    healthcheck:
      test: pg_isready -U postgres -d payments
      interval: 10s
      timeout: 3s
      retries: 3

